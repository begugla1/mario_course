services:
  database:
    networks:
      - backend
    container_name: postgres_db
    image: postgres:13.3
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 3s
      retries: 5

  api:
    networks:
      - backend
    container_name: api
    restart: always
    build:
      context: .
      dockerfile: docker/dockerfiles/base.Dockerfile
    entrypoint: ["sh", "docker/scripts/api_entrypoint.sh"]
    env_file:
      - .env
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      database:
        condition: service_healthy
        restart: false
    
  redis:
    networks:
      - backend
    container_name: redis
    image: redis:7.2-alpine
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 2s
      timeout: 3s
      retries: 5

  celery_worker:
    networks:
      - backend
    container_name: celery_worker
    build:
      context: .
      dockerfile: docker/dockerfiles/base.Dockerfile
    env_file:
      - .env
    volumes:
      - .:/code
    entrypoint: ["sh", "docker/scripts/celery_worker_entrypoint.sh"]
    depends_on:
      redis:
        condition: service_healthy
        restart: false
  
  flower:
    networks:
      - backend
    container_name: flower
    build:
      context: .
      dockerfile: docker/dockerfiles/base.Dockerfile
    env_file:
      - .env
    volumes:
      - .:/code
    entrypoint: ["sh", "docker/scripts/flower_entrypoint.sh"]
    depends_on:
      - celery_worker
      - api
    ports:
      - 5555:5555

  pgadmin:
    networks:
      - backend
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - 5050:80
    healthcheck:
      test: ["CMD", "ping localhost:80 || exit 1"]
      interval: 10s
      timeout: 5s
      start_period: 160s
      retries: 3
    depends_on:
      - api
    links:
      - database:db

networks:
  backend:
    driver: bridge
