services:
  database:
    container_name: postgres_db
    image: postgres:13.3
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 4s
      timeout: 3s
      retries: 5

  migrations:
    container_name: migrations
    build:
      context: .
      dockerfile: trading_course/Dockerfile
    command: >
      sh -c "alembic -c migrations/alembic.ini revision --autogenerate --rev-id "init" \
      && sed -i '1iimport fastapi_users_db_sqlalchemy' migrations/versions/init_.py
      && alembic -c migrations/alembic.ini upgrade head"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - .:/code
    depends_on:
      database:
        condition: service_healthy
        restart: false
    
  web_app:
    extends: migrations
    container_name: web_app
    command: >
      sh -c "python trading_course/main.py"
    ports:
      - "8000:8000"
    depends_on:
      migrations:
        condition: service_completed_successfully
        restart: false
    
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_DEFAULT_PORT}:80"
    healthcheck:
      test: ["CMD", "ping localhost:80 || exit 1"]
      interval: 10s
      timeout: 5s
      start_period: 160s
      retries: 3
    depends_on:
      migrations:
        condition: service_completed_successfully
        restart: false
      web_app:
        condition: service_started
        restart: false
    links:
      - "database:db"
